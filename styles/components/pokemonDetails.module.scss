@use '../1-helpers/variables';

$minVWTablet: variables.$minVWTablet;
$minVWDesktop: variables.$minVWDesktop;
$maxWVerticalC: variables.$maxWVerticalC;
$container: 375px;
$imgHeight: 25vh;
$mDMarginTop: 2rem;

%center {
  width: fit-content;
  height: fit-content;
  margin: 0 auto;
}

%centerFlex {
  display: flex;
  justify-content: center;
  align-items: center;
}

.buttom {
  @extend %centerFlex;
  $base: 10vw;
  position: fixed;
  bottom: 2rem;
  left: 50vw - (10vw /2);
  width: $base + 5;
  height: $base + 5;
  background-color: rgb(148,235,190, 0.2);
  color: black;
  text-decoration: none;
  font-weight: 900;
  font-size: variables.$fontLarge;
  border-radius: variables.$circleBorder;
  border: 3px solid rgba(0, 0, 0, 0.2);
  z-index: 999;
  .innerCircle {
    @extend %centerFlex;
    width: $base;
    height: $base;
    border-radius: inherit;
    background-color: rgb(148,235,190, 0.5);
    border: 2px solid variables.$secundaryColor;
  }
}
.number {
  position: absolute;
  top: 0;
  right: 0;
  padding: 10px 10px 40px 40px;
  background-image: linear-gradient(45deg, rgba(0, 0, 0, 0) 50%, variables.$detailsColor 50%) ;
}
.img {
  display: block;
  height: $imgHeight;
  width: auto;
  margin: -($imgHeight * 0.8) auto 0vh;
  z-index: 999;
}
.container {
  display: flex;
  flex-direction: column;
  margin: $imgHeight auto 0;
  background-color: white;
  height: auto;
  width: 100%;
  max-width: $container;
  border-radius: variables.$borderRadius;
  box-shadow: variables.$boxShadowCard;
  z-index: 1;
  padding-bottom: 2rem;
  .mainName {
    font-size: variables.$fontXLarge;
    font-weight: 900;
    margin: 0 auto 0.2em;
    height: fit-content;
    width: fit-content;
  }
  .types {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin: 0 auto;
    height: fit-content;
    .type {
      color: white;
      width: 50px;
      height: fit-content;
      display: flex;
      justify-content: center;
      margin: 5px;
      font-size: variables.$fontSmall;
      border-radius: 15px;
    }
  }
  .mainDetails {
    margin-top: $mDMarginTop;
    display: grid;
    grid-template-columns: auto auto auto;
    width: 100%;
    .grid {
      display: flex;
      flex-direction: column;
      justify-content: center;
      .key {
        @extend %center;              
        font-size: variables.$fontNormal;
        font-weight: 300;
      }
      .value {
        @extend %center;          
        font-size: variables.$fontXLarge;
        font-weight: 800;
      }
      .unit {
        font-size: variables.$fontNormal;
        font-weight: 300;
      }
    }
  }
}

.type_steel{@extend .type; background-color: variables.$type_steel;}
.type_dark{@extend .type; background-color: variables.$type_dark;}
.type_dragon{@extend .type; background-color: variables.$type_dragon;}
.type_ghost{@extend .type; background-color: variables.$type_ghost;}
.type_ice{@extend .type; background-color: variables.$type_ice;}
.type_rock{@extend .type; background-color: variables.$type_rock;}
.type_psychic{@extend .type; background-color: variables.$type_psychic;}
.type_fighting{@extend .type; background-color: variables.$type_fighting;}
.type_fairy{@extend .type; background-color: variables.$type_fairy;}
.type_ground{@extend .type; background-color: variables.$type_ground;}
.type_electric{@extend .type; background-color: variables.$type_electric;}
.type_normal{@extend .type; background-color: variables.$type_normal;}
.type_bug{@extend .type; background-color: variables.$type_bug;}
.type_water{@extend .type; background-color: variables.$type_water;}
.type_flying{@extend .type; background-color: variables.$type_flying;}
.type_fire{@extend .type; background-color: variables.$type_fire;}
.type_poison{@extend .type; background-color: variables.$type_poison;}
.type_grass{@extend .type; background-color: variables.$type_grass;}

@media only screen and (min-width: $minVWTablet) {
  .buttom {
    $baseT: 5vw;
    left: 50vw - ($baseT /2);
    width: $baseT + 2;
    height: $baseT + 2;
    font-size: variables.$fontNormal;
    .innerCircle {
      width: $baseT;
      height: $baseT;
    }
  }
}

@media only screen and (min-width: ($container * 2)) {
  .container {
    width: $container * 2;
    max-width: $container * 2;
    padding: 0 5%;
    .mainDetails {
      width: 85%;
      margin-left: auto;
      margin-right: auto;
    }
    .abStContainer {
      display: grid;
      grid-template-columns: auto auto;
      background-color: blue;
      max-width: 100%;
      width: 100%;
    }
  }
}