@use '../1-helpers/variables';

@mixin imageSize($percentage) {
  width: 100%;
  height: $percentage; 
}

%absolute {
  position: absolute;
}

.container {
  width: 100%;
  height: 35vw;
  margin: 0;
  position: relative;
  border-radius: variables.$borderRadius;
  border: 1px solid white;
  background-image: variables.$radialGradientGreen;
  padding: 5vw 1vw 1vw 1vw;
  &:active {
    background-color: rgba(255, 255, 255, 0.3);
    >.background_image {
      opacity: 1;
    }

  }
}
.pokemon_image {
  @extend %absolute;
  @include imageSize(85%);
  z-index: 3;
  bottom: 0;
  &:active {
    padding: 5px;
  }
}

.background_image {
  @include imageSize(100%);
  background-image: url('/images/pokeball_white_bg.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.2;
}

.number {
  @extend %absolute;
  top: 0;
  left: 0;
  background-color: variables.$detailsColor;
  color: white;
  width: fit-content;
  padding: 1vw;
  font-size: variables.$fontNormal;
  border-radius: variables.$borderRadius;
  z-index: 2;
}

$minVWTablet: variables.$minVWTablet;
$minVWDesktop: variables.$minVWDesktop;
@media only screen and (min-width: $minVWTablet) {
  .container {
    width: auto;
    height: (100vw / 4.5);  
    padding: 3vh 1vw 1vw;
  }
}

$maxWVerticalC: variables.$maxWVerticalC;
@media only screen and (min-width: $minVWDesktop) {
  .container {
    max-width: variables.$gpBase;
    max-height: $maxWVerticalC/4;  
    padding: 3vh 1vw 1vw;
  }
}

@media only screen and (orientation: landscape) {
  .number {
    padding: 1vh;
  }
}