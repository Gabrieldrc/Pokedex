@use '../1-helpers/variables';

$widthBig: 50%;
$widthMedium: 35%;
$widthSmall: 30%;
$arrowBase: 50px;

%container {
  display: flex;
  flex-direction: column;
  max-width: $widthBig;
  min-width: $widthSmall;
  height: fit-content;
  margin: 0 auto;
  margin-bottom: 1rem;
}
.bigContainer {
  @extend %container;
  width: $widthBig;
}
.mediumContainer {
  @extend %container;
  width: $widthMedium;
}
.smallContainer {
  @extend %container;
  width: $widthSmall;
}
.arrow {
  height: $arrowBase;
  width: 100%;
  font-size: variables.$fontXLarge;
  & > div {
    transform: rotate(45deg);
    width: 40px;
    height: 40px;
    border-bottom: 10px solid white;
    border-right: 10px solid variables.$detailsColor;
    margin: auto;
  }
}

.pokemonContainer {
  display: flex;
  flex-direction: column;
  height: fit-content;
  width: 100%;
  & a {
    order: 2;
  }
  & img {
    border-radius: variables.$borderRadius;
    background-color: white;
    box-shadow: variables.$boxShadowCard;
    width: 100%;
    margin: auto;
  }
  & > h2 {
    order: 3;
    color: variables.$darkGray;
    font-size: variables.$fontSmall;
    width: fit-content;
    color: white;
    margin: 0 auto;
    & > span {
      font-weight: 900;
      color: variables.$detailsColor;
    }
  }
}

.evolveDetails {
  order: 1;
  display: flex;
  height: 3rem;
  justify-content: flex-end;
  align-items: flex-start;
  flex-direction: column;
  font-weight: 500;
  font-size: variables.$fontSmall * 0.8;
  & > .key {
    color: variables.$secundaryColor;
  }
}

@media only screen and (min-width: (variables.$pDContainer *2)) {
  $widthBig: 30%;
  $widthMedium: 25%;
  $widthSmall: 15%;
  %container {
    position: relative;
    flex-direction: row;
    max-width: $widthBig;
    min-width: $widthSmall;
    height: fit-content;
    margin: 0 auto;
    margin-bottom: 1rem;
  }
  .bigContainer {
    @extend %container;
    width: $widthBig;
  }
  .mediumContainer {
    @extend %container;
    width: $widthMedium;
  }
  .smallContainer {
    @extend %container;
    width: $widthSmall;
  }
  .arrow {
    position: absolute;
    bottom: 2rem;
    right: -($arrowBase * 2);
    width: $arrowBase;
    margin: auto 1rem;
    & > div {
      transform: rotate(-45deg);
    }
  }
}